do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,be)local be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs=91,64,88,39,84,64,14,27,68,30,48,76,84,11,38,89,39,97,83,25,64,28,11,65,50,77,17,55,57,65,19,33,57,71,53,90,42,45,32,60,97,79,33,10,10,82,35,52,40,23 while be~=81 do if bf>=791 then if bf>=1125 then if bf>=1281 then if bf<=1350 then if bf>=1303 then if bf<1345 then bf=1350 bg={}else bv={}bf=1392 end else bf=1303 bk=function(be,ct,ct)local ct,cu,cv,cw,cx,cy,cz,da=81,45,64,33,13,44,62,30,33,70,77,67,83,56,93,69,71,75,45,74,20,80,96,34,57 while ct~=42 do if cu>=279 then if cu>=379 then if cu>=436 then if cu>=460 then if cu>465 then ct=42;else cu=489 return cz;end else do cz[138]=cx end cu=460 end else if cu<395 then do cx={}end cu=404 else for ct=1,cv do local db,dc,dd,de=54,58,65,99,45,27,50,48,53,96,51,77,80,45 while db~=34 do if dc<=122 then if dc>=99 then if dc>108 then do de=nil end dc=156 else dc=122 dd=bm()end else dc=99 dd,de=nil end else if dc>=200 then if dc>206 then db=34;else dc=246 cx[ct]=de;end else dc=200 do if(not(dd~=1))then do de=(0~=bm());end elseif(4==dd)then de=bu();elseif(3==dd)then do de=bt();end elseif(2==dd)then de=be[bt()];end;end end end end end cu=436 end end else if cu>=337 then if cu<347 then do cz[199]=bm();end cu=356 else cv=bx()cu=379 end else if cu>283 then cu=337 cz[162]=da;else cu=316 for be=1,bx()do local ct,db,dc,dd,de,df=91,74,95,83,47,42,10,19,15,18,48,56,39,13,39,60,93,45,48,91,86,86,92,87,66,10 while ct~=47 do if db<=349 then if db>=198 then if db>=280 then if db>=308 then if db<346 then dc=bh(df,1,2)db=349 else db=372 dd[164]=dc end else db=308 de=bx()end else if db<222 then if not(bm()~=1)then for dg=1,bm()do do dd[73][dg]={bm()==0,bx()}end end end db=231 else df=bx()db=280 end end else if db<=106 then if db>81 then db=153 do dd={{},nil,nil}end else db=106 dc,dd,de,df=nil end else if db<173 then db=175 dd[8]=bm();else db=198 dd[73]={};end end end else if db>=497 then if db<=519 then if db>506 then db=562 dd[132]=-dd[123]else do dd[143]=bh(df,12,20);end db=519 end else if db<=562 then dd[90]=-dd[40]db=601 else if db<622 then db=630 do da[be]=dd;end else ct=47;end end end else if db<=411 then if db>376 then db=455 dd[123]=bh(df,3,11);else db=411 dd[93]=bh(de,1,11);end else if db<466 then dd[108]=bh(de,12,33);db=471 else db=497 do dd[40]=bh(df,21,29);end end end end end end end end end end else if cu<=119 then if cu<=77 then if cu<72 then cv,cw,cx,cy,cz,da=nil cu=77 else da={}cu=102 end else if cu<110 then cw={}cu=119 else cz={}cu=135 end end else if cu<=179 then if cu>137 then for be=(#cs+1),(#cs+cy)do local ct,cv,cx,da,db=77,43,62,76,29,32,20,48,28,79,33,85,78,98,96,67,59,87,51,94,77,62,68,24 while ct~=37 do if cv>=382 then if cv<=481 then if cv<=426 then if cv<419 then db[123]=bh(da,3,11);cv=426 else cv=454 db[107]=bh(da,12,20);end else if cv>456 then db[108]=bh(cx,12,33);cv=523 else cv=481 db[40]=bh(da,21,29);end end else if cv<=555 then if cv>529 then db[90]=-db[40]cv=585 else do db[132]=-db[123]end cv=555 end else if cv<591 then cv=600 cs[be]=db;else ct=37;end end end else if cv<=180 then if cv>=133 then if cv>141 then da=bx()cv=223 else cv=180 db[8]=bm();end else if cv<89 then cx,da,db=nil cv=92 else cv=133 db={}end end else if cv<=271 then if cv>227 then cv=320 db[143]=bm();else cx=bx()cv=271 end else if cv>328 then do db[93]=bh(cx,1,11);end cv=382 else cv=336 db[164]=bh(da,t,2);end end end end end end cu=200 else cy=bx()cu=179 end else if cu>204 then cu=279 cz[76]=cw;else cu=240 for t=1,bx()do cw[t-1]=bk();end end end end end end end end else if bf>=1410 then if bf<1436 then bf=1441 return ck(bk(cg()),{},cg())();else break end else ck=function(t,be,ct,cu,cu)local cu,cv,cw,cx,cy do cv=bg end cw=t[76]cx=t[162]cy=t[199]cu=t[138]return function(...)local t,cv,cz,da,db,dc,dd,de,df dd=1 de=-1 cv=-1 do da={}end t={...}db=(bo('#',...)-1)cz={}dc={}for cv=0,db do do if(not(cv<cy))then da[(cv-cy)]=t[(cv+1)];else do dc[cv]=t[(cv+1)];end end;end end;df=(db-cy+1)while true do local cv,df,dg,dh,di,dj,dk,dl,dm,dn cv=cx[dd]di=cv[93]dg=cv[8]dm=cv[123]dh=cv[107]dl=cv[40]dk=cv[143]dn=cv[132]do dj=cv[108]end df=cv[90]if not(cv[93]<48)then if not(di>71)then do if not(di>59)then if not(di<54)then if not(di>56)then if not(di>54)then local dg dg=dm do return br(dc,dg,(dg+dj))end;else if(di>55)then if((cu[dm]<dc[dl]))then dd=dj;end;else do dc[cv[dm]]=dc end end end else if not(di>j)then bg[dm]={}else if not(di~=58)then local j,dg,_do dg=dm do j=dc[(dg+2)]end _do=(dc[dg]+j)dc[dg]=_do;if((j>0))then if(not(_do>dc[dg+1]))then dd=dj;dc[(dg+3)]=_do;end elseif(not(_do<dc[dg+1]))then dd=cv[108];dc[(dg+3)]=_do;end else if(cu[dl]~=dc[dm])then dd=dj;end;end end end else if not(di>50)then if not(di>48)then if not dc[dm]then dd=dj;end;else if not(di~=49)then dc[dm]=cu[dj]else dc[dm]=dc[dj][cu[cv[40]]];end end else if not(di>51)then dc[dm]=(dc[dj]/cu[dl]);else if(di<53)then dc[dm]=bg[dh]else local j do j=dm end do do return dc[j](br(dc,(j+1),dj))end;end end end end end else if not(cv[93]<66)then if not(di>68)then if not(di<67)then if(di>67)then do cx[dd]=cs[dk];end dd=cv[108];else local j,dg do j=dm end do dg=dc[dj]end do dc[(j+1)]=dg;end dc[j]=dg[dc[dl]];end else local j,dg,_do,dp j=dm dp=((cv[40]-1)*50)do _do=dc[j]end dg=dj for dq=1,dg do do _do[(dp+dq)]=dc[(j+dq)]end end;end else do if not(di<70)then if 70==di then dc={};do for j=0,db do do if(j<cy)then dc[j]=t[(j+1)];else break end;end end;end else be[dj]=dc[dm];end else bg[dm]()end end end else if not(di<63)then if not(di>63)then dc[dm]=nil;else if 64==di then if((dc[dm]>dc[dl]))then dd=cv[108];end;else local j,t,cy j=cw[cv[108]]t=nil do cy={}end t=bn({},{__index=function(db,db)local db=cy[db];return db[1][db[2]];end,__newindex=function(db,db,dg)local db=cy[db]db[q][db[2]]=dg;end;});for q=1,dl do local db db=cv[73][q]if db[1]then do cy[(q-1)]={dc,db[2],nil,nil};end else cy[(q-1)]={be,db[b],nil,nil};end;cz[(#cz+1)]=cy;end;do dc[dm]=ck(j,t,ct);end end end else do if not(di>60)then cu=bg[dm](cu)else if(di>61)then ct[cu[dj]]=dc[dm];else local b,j j=dm b=cv[108]for q=j,b do dc[q]=da[(q-j)];end;end end end end end end end else do if not(di<84)then if not(di<90)then if not(di<93)then if not(di>94)then if f==di then local b,f,j,q,t do t=dm end f=dl j=(t+2)do q={dc[t](dc[t+1],dc[j])}end for cy=1,f do do dc[(j+cy)]=q[cy]end end b=dc[(t+3)]if b then dc[j]=b else dd=dj;end;else dc[dm]=ct[cu[cv[108]]][cu[dl]];end else if(di>95)then local b,f f,b=cm(...)for b=1,dm do dc[(b-1)]=f[b]end else dc[dm]=dc[dj]end end else if not(di>90)then if((dc[dm]<dc[dl]))then dd=dj;end;else if(di<92)then local b,f f=dm b=dc[dj]dc[(f+1)]=b;dc[f]=b[cu[dl]];else local b b=dm dc[b](br(dc,(b+1),de))end end end else do if not(di<87)then if not(cv[93]>87)then dd=((cu[dm]<dc[dl])and dj or dd)else if(cv[o]>88)then bg=dc else do dc[df]=(function()dc[dm]=ck(cw[dh],nil,ct);end)end end end else do if not(cv[93]<85)then if 85==di then if dc[dm]then dd=dj;end;else if(not(dc[cv[123]]<dc[cv[40]]))then do dd=dj;end end;end else dc[dm]=dc[dj][dc[dl]];end end end end end else if not(di>77)then if not(di<75)then if not(di<76)then if(cv[93]>76)then dc[dm]=be[dj];else dc[cv[123]]=(dc[dj]+cu[dl]);end else dc[dm]=ct[cu[cv[108]]];end else do if not(di<73)then if(di>73)then dc[dm][cu[cv[108]]]=cu[dl];else dc[dm]=(dc[cv[108]]-dc[dl]);end else dc[dm]=ck(cw[cv[108]],nil,ct);end end end else if not(di<81)then if not(di>p)then dd=dj;else if(di>82)then dd=((dc[dm]<dc[cv[40]])and dj or dd)else dc[dm]=(dc[cv[108]]*cu[dl]);end end else if not(di<79)then if(di<80)then local b,f do f=cv[123]end b={}for j=1,#cz do local o do o=cz[j]end for j=0,#o do local p,q,t q=o[j]p=q[1]t=q[2]do while p==dc and t>=f do b[t]=p[t];q[1]=b;break end end end;end;else do if dm then do dm=false;end dl=dj;dd=(dd-1);else dd=(dd+dj+cv[40]);end end end else dc[dm][cu[dj]]=dc[dl];end end end end end end else if not(di<24)then if not(di<36)then if not(di>d)then if not(di<39)then if not(di>39)then local b b=dm dc[b]=dc[b](br(dc,b+1,de));else if 40==di then dc[df]();else dc[dm]=(dc[dj]%dc[dl]);end end else if not(di>36)then ct=dc[cv[dm]]else if 37==di then dc[dm]=#dc[dj];else dc[dm]=(dc[dj]^dc[dl]);end end end else if not(di<45)then if not(di<46)then do if(di>46)then cx[dd]=cs[dk];dd=dj;else local b,d d=dm b={}if(#cz>0)then for f=1,#cz do local j do j=cz[f]end for f=0,#j do local o,p,q q=j[f]p=q[1]o=q[2]while p==dc and o>=y do b[o]=p[o]q[1]=b break end end end end return br(dc,d,de);end end else local b b=dm dc[b]=dc[b](dc[b+1]);end else if not(di<43)then if(di<44)then local b do b=dm end dc[b](dc[(b+1)])else if(not(dc[cv[123]]==dc[cv[40]]))then dd=cv[108];end;end else do dc[dm][dc[dj]]=dc[dl];end end end end else do if not(di>29)then if not(di>26)then if not(di>24)then dc[cv[123]]=dc[dj];else if(di<26)then dc[dm]=(dc[dj]*dc[dl]);else dc[dm]=(0~=cv[108]);do dd=(dd+1);end end end else do if not(di<28)then if(di<29)then for b=dm,dj do do dc[b]=nil;end end;else dc[dm]=-dc[dj];end else dc[cv[123]]=bg[dh]end end end else if not(di<33)then if not(di>33)then dc[dm]=(dc[cv[108]]/dc[dl]);else if(di>34)then local b,d,f d=dm do b=dc[d]end f=dj for j=1,f do do b[j]=dc[(d+j)]end end;else de=cv[dm];end end else if not(di<31)then if(di<32)then bg[dm]=dc[dh]else local b,d d=dm b={}if(#cz>0)then for f=1,#cz do local j j=cz[f]do for f=0,#j do local o,p,q p=j[f]do o=p[1]end do q=p[x]end if(o==dc and q>=0)then b[q]=o[q]p[1]=b end end end end end return dc[d],dc[(d+1)]end else local b,d b=dj d=dc[b]for f=(b+1),dl do d=(d..dc[f]);end;dc[dm]=d;end end end end end else if not(di<12)then if not(di<18)then do if not(di<21)then if not(cv[93]<22)then do if(di<23)then bg[dm]=bg[dh]else dc[df]=(function()dc[dm]=ck(cw[dh],nil,ct);end)end end else end else if not(di<19)then if(cv[93]<20)then dc[dm]();else do return dc[dm]end end else do return dc[dm]();end;end end end else if not(di<15)then if not(cv[93]>15)then local b,d,f do b=dm end f={dc[b](br(dc,b+1,dj))}d=0 for j=b,dl do d=(d+1);dc[j]=f[d];end else if(di>16)then local b,d,f,j f=dm d,j=cm(dc[f](dc[(f+1)]))do de=(j+f-1)end b=0 do for j=f,de do do b=(b+1);end dc[j]=d[b];end;end else do cx[dd]={[93]=cv[93]- -58,[123]=9,[108]=13,[40]=r,[v]=0};end dd=(dd-1);end end else if not(di>12)then local b,d,f,j f=dm d,j=cm(dc[f](br(dc,(f+1),dj)))de=(j+f-1)b=0 for j=f,de do b=(b+1);dc[j]=d[b];end;else do if 13==di then local b,d,f f=dm b={dc[f](dc[f+1])}d=0 for j=f,dl do d=(d+1);dc[j]=b[d];end else end end end end end else if not(di<6)then do if not(cv[93]>8)then if not(di>6)then else if(di<8)then dc[dm]=(not dc[dj]);else local b b={}if(#cz>0)then for d=1,#cz do local f f=cz[d]for d=m,#f do local j,m,o o=f[d]j=o[u]do m=o[2]end if(j==dc and m>=0)then do b[m]=j[m]end o[1]=b end end end end do return bb,di,1;end end end else if not(cv[93]>9)then local b do b=dm end dc[b](br(dc,(b+1),dj))else if(di>10)then do return dc[dn][dk]end else dc[dm]=(dc[dj]+dc[dl]);end end end end else if not(di<3)then if not(di<4)then if(di<5)then while not dc[cv[40]]do dc[dm]=dc[dl];dd=cv[108];break end else local b b=dc[dn][dk]dc[dn][cv[143]]=(b..dc[dl]);end else local b b=dm dc[b]=dc[b](br(dc,b+1,dj));end else if not(di>0)then dc[cv[123]]=(dc[dj]%cu[dl]);else if(di<2)then dc[dm]={};else local b,d,f d=dm f=dc[d]b=dc[(d+2)]do if((b>0))then if((f>dc[d+1]))then dd=dj;else dc[(d+3)]=f;end elseif((f<dc[d+1]))then dd=cv[108];else do dc[(d+3)]=f;end end end end end end end end end end do dd=(dd+1);end end;end;end bf=1410 end end else if bf>=1174 then if bf<=1174 then bt=function(b,b,b)local b,d,f,j=83,47,50,96,19,91,75,29,63,50,89,97,13,97,72 while b~=36 do if d<=89 then if d<=47 then f,j=nil d=71 else if d<87 then d=89 j=bx()else f=bq:sub(cb,(cb+j-1))d=133 end end else if d<=133 then d=155 cb=(cb+j);else if d<177 then d=182 return f;else b=36;end end end end end bf=1210 else if bf<1228 then cm=function(...)return{...},bo('#',...)end bf=1236 else bf=1281 cs={}end end else if bf<1132 then ce=function()local b,d d,b=co(bq,cb,(cb+2))cb=(cb+2);return((b*256)+d);end bf=1141 else bf=1174 bu=function()local b,d,f,j,m,o,p,q=66,52,71,96,70,36,61,32,83,11,72,47,98,60,70,55,47,98,68 while b~=31 do if d>=217 then if d<=285 then if d<=217 then do o=cc(20,p,11)end d=261 else if d>270 then q=1 d=323 else d=285 f=(cc(0,p,20)*4294967296+m)end end else if d<=323 then do if 0==o then if 0~=f then o=1 q=0 else return(j*0)end elseif 2047~=o then else if not(f~=0)then do return(j*(0/0))end else return(j*(1/0))end end end d=349 else if d<361 then d=367 return(j*(2^(o-1023))*(f/ch+q))else break end end end else if d>=120 then if d>=154 then if d<175 then if((m==0 and p==g))then do return 0 end end d=183 else d=217 j=((-1)^cc(31,p,1))end else d=154 p=bx()end else if d>57 then m=bx()d=120 else d=82 f,j,m,o,p,q=nil end end end end end end end end else if bf<=909 then if bf<=825 then if bf<822 then bf=825 ci=''else bf=851 ch=(2^52)end else if bf<=851 then cj={[c]=1}bf=874 else if bf>883 then for b=1,31 do cj[b]=bw bw=(bw*2)end bf=942 else bf=909 bw=2 end end end else if bf>=1029 then if bf>=1054 then if bf<1096 then bf=1102 bx=function()local b,c,d,f c,f,d,b=co(bq,cb,(cb+3))cb=(cb+4);do return((b*16777216)+(d*65536)+(f*256)+c);end end else do bm=function()local b b=co(bq,cb,cb)do cb=(cb+1);end return b;end end bf=1125 end else bf=1054 do cb=1 end end else if bf<=942 then bf=962 cc=function(b,c,d,f,f)local f,g,j=68,37,33,64,81,41,47,95,43,46,97,43 while f~=39 do if g>=157 then if g<=157 then do j=(j-j%1)end g=189 else if g>193 then break else g=219 return j end end else if g<=37 then j=nil g=86 else if g<106 then j=nil g=108 else g=157 j=((c/cj[b])%cj[d])end end end end end else if bf<1000 then bf=1009 bi=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local d,f=0,1 while b>0 and c>0 do local g,j=b%16,c%16 d=d+by[g+1][j+1]*f b=(b-g)/16 c=(c-j)/16 f=f*16 end d=d+b*f+c*f return d end)else bh=function(b,c,d,f)local f do f=((b/2^(c-1))%2^((d-1)-(c-1)+1))end return(f-f%1);end bf=1029 end end end end end else if bf<=372 then if bf>=197 then if bf>=317 then if bf<=317 then cn=math.ldexp bf=354 else if bf<364 then cg=(getfenv or function()return _ENV end)bf=372 else bn=setmetatable bf=409 end end else if bf<=197 then do bl=string.rep end bf=242 else if bf>249 then cq=table.insert bf=317 else bf=291 cf=table.concat end end end else if bf<=93 then if bf<89 then bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs=nil bf=93 else bf=119 co=string.byte end else if bf<=119 then bp=string.char bf=154 else if bf>159 then cp=string.gsub bf=197 else bj=string.sub bf=173 end end end end else if bf>=591 then if bf<=656 then if bf>=610 then if bf<651 then ca=tonumber bf=656 else cr={}bf=705 end else bf=610 do br=(unpack or table.unpack)end end else if bf<=705 then do for b=0,255 do cr[b]=bp(b);end end bf=727 else if bf>732 then bf=791 by={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,bc,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,h,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,ba,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,e,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,bd,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,w,9,8,15,14,k,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,s,4,5,6,7,0,1,2,3,},{13,12,n,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,a,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,l,9,8,z,6,5,4,i,2,1,0,},nil,nil,nil}else bq=cpfunction(a,b,b,b,b)return cr[ca(a,16)]end)bf=768 end end end else if bf<=431 then if bf<423 then bf=431 bo=select else bf=474 do bz=type end end else if bf>=509 then if bf>514 then do cd=math.floor end bf=591 else bf=552 bs=math.abs end else cl=(function(a,b,b)if'number'==bz(a)then return true else return false end end)bf=509 end end end end end end end)(15,2,0,41,11,93,0,9,3,57,13,10,0,15,93,81,1,14,11,1,1,143,10,2,0,7,3,0,3,12)end
